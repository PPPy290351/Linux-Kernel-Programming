From 443c3e57b3f3c9ce006933da7da7e2fe2bdaeb92 Mon Sep 17 00:00:00 2001
From: PPPy290351 <testforssid03@gmail.com>
Date: Sat, 27 Mar 2021 03:24:01 -0700
Subject: [PATCH] HW3 done

---
 HW3/Makefile          |  2 +-
 HW3/signaltotaskMod.c | 31 ++++++++++++++++++++++++++++++-
 2 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/HW3/Makefile b/HW3/Makefile
index 4c39658..ec02f29 100644
--- a/HW3/Makefile
+++ b/HW3/Makefile
@@ -20,6 +20,6 @@ clean:
 
 else
     # called from kernel build system: just declare what our modules are
-	obj-m := example.o
+	obj-m := signaltotaskMod.o
 
 endif
\ No newline at end of file
diff --git a/HW3/signaltotaskMod.c b/HW3/signaltotaskMod.c
index b9ff5e7..3de0058 100644
--- a/HW3/signaltotaskMod.c
+++ b/HW3/signaltotaskMod.c
@@ -6,6 +6,10 @@
 #include <linux/cdev.h>
 #include <linux/uaccess.h>
 #include <linux/string.h>
+#include <asm/siginfo.h>
+#include <linux/signal.h>
+#include <linux/pid_namespace.h>
+#include <linux/sched.h>
 MODULE_LICENSE("GPL");
 #define DRIVER_NAME "mynull"
 dev_t device_number;
@@ -25,10 +29,35 @@ static int mydevice_release(struct inode *inode, struct file *file)
 	return 0;
 }
 
+int bareMetal_atoi(char * str)
+{
+    int tmpAdder = 0;
+    int i;
+    for(i=0; *(str+i) != '\0'; i++){
+        tmpAdder = tmpAdder * 10 + *(str+i) - '0';
+    }
+    return tmpAdder;
+}
+
 ssize_t mydevice_read(struct file *file, char __user *user_buffer,
 					  size_t count, loff_t *offset)
 {
-	pr_info("%s\n", __func__);
+	int pid = bareMetal_atoi(buffer);
+	struct pid * stPid;
+	int sig = SIGINT;
+	stPid = find_vpid(pid);
+	int ret = kill_pid(stPid, sig, 1);
+	if(ret != 0){
+        pr_err("[Error] kill pid failed");
+		return -EFAULT;
+    }
+	char * output;
+    output = "success\n\0";
+    int i = 0;
+    for(i=0; i<strlen(output); i++){
+        buffer[i] = *(output+i);
+    }
+    buffer[i] = '\0';
 	if (*offset > 100)
 		return 0;
 	if (*offset + count > 100)
-- 
2.29.2.windows.2

